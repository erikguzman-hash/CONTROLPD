rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function userRole() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) ? get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role : '';
    }

    function isOneOfRoles(roles) {
      return isAuth() && userRole() in roles;
    }

    match /users/{userId} {
      allow read: if isAuth();
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isOneOfRoles(['director', 'administrador']);
    }

    match /tasks/{taskId} {
      allow read: if isAuth();
      allow create: if isAuth() && isOneOfRoles(['coordinador', 'administrador', 'director']);

      allow update: if isAuth() && (
        resource.data.get('creatorId', '') == request.auth.uid ||
        resource.data.get('assigneeId', '') == request.auth.uid ||
        isOneOfRoles(['coordinador', 'director'])
      );
      allow delete: if isAuth() && (
        resource.data.get('creatorId', '') == request.auth.uid ||
        isOneOfRoles(['director', 'administrador'])
      );
    }
  }
}